<?php
/**
 * @file indexnow.module
 */

/**
 * Implements hook_config_info().
 */
function indexnow_config_info() {
  $prefixes['indexnow.settings'] = array(
    'label' => t('IndexNow'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Implements hook_permission().
 *
 */
function indexnow_permission() {
  return array(
    'indexnow settings' => array(
      'title' => t('IndexNow settings')
    ),
  );
}

/**
 * Implements hook_menu().
 *
 */
function indexnow_menu() {
  $config  = config('indexnow.settings');
  $api_key = $config->get('indexnow_api_key');
  $items   = array();

  $items['admin/config/metadata/indexnow'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'IndexNow',
    'description' => 'IndexNow settings.',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('indexnow_settings_form'),
    'access arguments' => array('indexnow settings'),
    'file' => 'indexnow.admin.inc',
  );

  if (!empty($api_key)) {
    $items[$api_key . '.txt'] = array(
      'page callback' => 'indexnow_output',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    );
  }
  
  return $items;
}

/**
 * Save API key to file
 * @param string $api_key
 * @return boolean 
 */
function indexnow_file_save($api_key) {
  if (empty($api_key)) {
    return FALSE;
  }
    
  $file_dir  = 'public://indexnow';
  $file_path = $file_dir . '/' . $api_key . '.txt';
  
  if (!file_exists($file_dir)) {
    backdrop_mkdir($file_dir);
  }

  file_put_contents($file_path, $api_key);
  
  $success = file_exists($file_path);
  
  if ($success) {
    watchdog('IndexNow', 'IndexNow API key file saved.');
    backdrop_set_message(t('IndexNow API key file saved successfully.'));
  }
  return $success;
}

/**
 * Output API key from file
 */
function indexnow_output() {
  $config    = config('indexnow.settings');
  $file_dir  = 'public://indexnow';
  $file_name = $config->get('indexnow_api_key');
  $file_path = $file_dir . '/' . $file_name . '.txt';

  if (!is_readable($file_path) || !is_readable($file_path)) {
    backdrop_not_found();
    backdrop_exit();
  }
  else {
    $file = file_get_contents($file_path);
    backdrop_add_http_header('Content-type', 'text/plain; charset=utf-8');
    backdrop_add_http_header('X-Robots-Tag', 'noindex, follow');
    echo $file;
    exit();
  }
}

/**
 * Get URLs of recently changed / created nodes
 * 
 * @return array of URLs
 */
function indexnow_get_urls() {
  $config = config('indexnow.settings');
  $content_types = $config->get('content_types');
  $types = array_values($content_types);
  
  foreach (array_keys($types, 0, true) as $key) {
    unset($types[$key]);
  }
  
  $urls = array();
  $last = state_get('indexnow_last_time');
  $now  = time();
  
  $nodes = db_select('node', 'n')
    ->fields('n')
    ->condition('n.type', $types, 'IN')  
    ->condition('n.changed', array($last, $now), 'BETWEEN')
    ->execute()
    ->fetchAll();
  
  if (!empty($nodes)) {
    foreach ($nodes as $node) {
      $urls[] = url('node/' . $node->nid, array('absolute' => TRUE));  
    }
  }
  
  return $urls;  
}

/**
 * Send URLs to search engine
 */
function indexnow_send_urls() {
  global $base_url;
  $urls = indexnow_get_urls();
  
  if (empty($urls)) {
    return;
  }

  $config       = config('indexnow.settings');
  $api_key      = $config->get('indexnow_api_key');
  $searchengine = $config->get('searchengine');
  
  switch ($searchengine) {
    case 'bing':
      $post_to = 'https://www.bing.com/IndexNow';
      break;
    case 'yandex':
      $post_to = 'https://yandex.com/indexnow';
      break;
  }

  $host = filter_input(INPUT_SERVER, 'SERVER_NAME', FILTER_SANITIZE_SPECIAL_CHARS);
  
  $data = array (
    "host" => $host,
    "key" => $api_key,
    "keyLocation" => $base_url . '/' . $api_key . '.txt',
    "urlList" => $urls
  );
  
  $data_encoded = backdrop_json_encode($data, TRUE);
  
  $ch = curl_init();
  
  curl_setopt($ch, CURLOPT_URL, $post_to);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
  curl_setopt($ch, CURLOPT_POST, TRUE);
  curl_setopt($ch, CURLINFO_HEADER_OUT, TRUE);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $data_encoded);

  curl_setopt($ch, CURLOPT_HTTPHEADER, array(
    'Content-Type: application/json; charset=utf-8',
    'Content-Length: ' . strlen($data_encoded)
    )
  );
  
  curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
  
  curl_exec($ch);
  
  if (!curl_errno($ch)) {
    switch ($httpcode = curl_getinfo($ch, CURLINFO_RESPONSE_CODE)) {
      case 200:
      case 202:
        watchdog('IndexNow', 'Recently created or updated content URLs have been submitted to search engines.');
        state_set('indexnow_last_time', time()); 
        break;
      default:
        watchdog('IndexNow',
          'HTTP response code: '  . $httpcode . ',<br>' .
          'Please check search engine documentation.', 
          NULL,
          WATCHDOG_WARNING
        );
    }
  }
  
  curl_close($ch);
}

/**
 * Implementation of hook_cron().
 */
function indexnow_cron() {
  indexnow_send_urls();
}
